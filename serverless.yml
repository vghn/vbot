service: vbot

custom:
  # Log all events to CloudWatch
  slack_enable_logging: true
  # The dynamodb table to store OAuth access data
  slack_table_name: VBotTeams-${opt:stage}
  # The path used to install the Slack App
  slack_path: slack
  # The path to redirect to after an install
  slack_install_redirect: 'https://slack.com'
  # Client ID
  slack_client_id: ${env:SLACK_CLIENT_ID}
  # Client Secret
  slack_client_secret: ${env:SLACK_CLIENT_SECRET}
  # Verification token
  slack_verification_token: ${env:SLACK_VERIFICATION_TOKEN}
  # Space delimited scopes
  slack_client_scopes: 'bot commands incoming-webhook'

provider:
  name: aws
  runtime: nodejs6.10
  stackTags:
    PROJECT: VBot
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
  environment:
    TABLE_NAME: ${self:custom.slack_table_name}
    CLIENT_ID: ${self:custom.slack_client_id}
    CLIENT_SECRET: ${self:custom.slack_client_secret}
    CLIENT_SCOPES: ${self:custom.slack_client_scopes}
    INSTALL_REDIRECT: ${self:custom.slack_install_redirect}
    VERIFICATION_TOKEN: ${self:custom.slack_verification_token}
    ENABLE_LOGGING: ${self:custom.slack_enable_logging}

functions:
  slack:
    handler: slack.listener
    events:
      ## Slash Commands, Events, and Interactive Messages
      - http:
          path: ${self:custom.slack_path}
          method: post
          integration: lambda
          response:
            template: $input.path('$')
      ## OAuth Routes
      - http:
          path: ${self:custom.slack_path}
          method: get
          integration: lambda
          request:
            parameters:
              querystrings:
                code: true
                state: true
          response:
            statusCodes:
              201:
                pattern: ''
              301:
                pattern: http.*
                headers:
                  Location: integration.response.body.errorMessage
                  Cache-Control: "'no-cache, no-store, must-revalidate'"

resources:
  Resources:
    SecretsBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        AccessControl: Private
    TeamsDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.slack_table_name}
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
